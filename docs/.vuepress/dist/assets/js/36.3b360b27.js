(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{235:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"一些js面试题整理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些js面试题整理"}},[t._v("#")]),t._v(" 一些JS面试题整理")]),t._v(" "),s("h2",{attrs:{id:"q1：输出以下代码的执行结果并解释为什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q1：输出以下代码的执行结果并解释为什么"}},[t._v("#")]),t._v(" Q1：输出以下代码的执行结果并解释为什么")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\na"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --\x3e undefined")]),t._v("\nb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// --\x3e {n: 2}")]),t._v("\n")])])]),s("h3",{attrs:{id:"解析："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析："}},[t._v("#")]),t._v(" 解析：")]),t._v(" "),s("p",[s("strong",[t._v("运算符优先级和连续赋值带来的坑")])]),t._v(" "),s("p",[t._v("首先，"),s("code",[t._v("a")]),t._v("和"),s("code",[t._v("b")]),t._v("同时引用了"),s("code",[t._v("{n:2}")]),t._v("对象，接着执行到"),s("code",[t._v("a.x = a = {n：2}")]),t._v("语句，尽管赋值是从右到左的没错，但是"),s("code",[t._v(".")]),t._v("的优先级比"),s("code",[t._v("=")]),t._v("要高，所以这里首先执行"),s("code",[t._v("a.x")]),t._v("，相当于为"),s("code",[t._v("a")]),t._v("（或者"),s("code",[t._v("b")]),t._v("）所指向的"),s("code",[t._v("{n:1}")]),t._v("对象新增了一个属性x，即此时对象将变为"),s("code",[t._v("{n:1;x:undefined}")]),t._v("。")]),t._v(" "),s("p",[t._v("之后按正常情况，从右到左进行赋值，此时执行"),s("code",[t._v("a ={n:2}")]),t._v("的时候，"),s("code",[t._v("a")]),t._v("的引用改变，指向了新对象"),s("code",[t._v("{n：2}")]),t._v(",而"),s("code",[t._v("b")]),t._v("依然指向的是旧对象。之后执行"),s("code",[t._v("a.x = {n：2}")]),t._v("的时候，并不会重新解析一遍"),s("code",[t._v("a")]),t._v("，而是沿用最初解析"),s("code",[t._v("a.x")]),t._v("时候的"),s("code",[t._v("a")]),t._v("，也即旧对象，故此时旧对象的"),s("code",[t._v("x")]),t._v("的值为"),s("code",[t._v("{n：2}")]),t._v("，旧对象为 "),s("code",[t._v("{n:1;x:{n：2}}")]),t._v("，它被"),s("code",[t._v("b")]),t._v("引用着。")]),t._v(" "),s("p",[t._v("后面输出"),s("code",[t._v("a.x")]),t._v("的时候，又要解析"),s("code",[t._v("a")]),t._v("了，此时的"),s("code",[t._v("a")]),t._v("是指向新对象的"),s("code",[t._v("a")]),t._v("，而这个新对象是没有"),s("code",[t._v("x")]),t._v("属性的，故访问时输出"),s("code",[t._v("undefined")]),t._v("；而访问"),s("code",[t._v("b.x")]),t._v("的时候，将输出旧对象的"),s("code",[t._v("x")]),t._v("的值，即"),s("code",[t._v("{n:2}")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"q2：数组扁平化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q2：数组扁平化"}},[t._v("#")]),t._v(" Q2：数组扁平化")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [[1,2,2],[3, 4, 5, 5],[6, 7, 8, 9,[11,12,[12,13,[14]]]],10]  ------\x3e   [1,2,2,3,4,5,5,6,7,8,9,11,12,12,13,14,10]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归法  可使用reduce map for循环等实现")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reduce")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reduce")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// map")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转字符串法 不过只适用于纯数字数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("flatten")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("arr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"q3：-1-2-3-map-parseint-返回结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q3：-1-2-3-map-parseint-返回结果"}},[t._v("#")]),t._v(" Q3：['1', '2', '3'].map(parseInt) 返回结果")]),t._v(" "),s("h3",{attrs:{id:"arrray-map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arrray-map"}},[t._v("#")]),t._v(" Arrray.map")]),t._v(" "),s("p",[s("code",[t._v("Array.map")]),t._v("方法会遍历原数组中的每个元素并执行"),s("code",[t._v("callback")]),t._v("，返回一个新的数组")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("callback")]),t._v("的第一个参数是"),s("code",[t._v("currentValue")]),t._v("，也就是原数组中正在处理的当前元素")]),t._v(" "),s("li",[s("code",[t._v("callback")]),t._v("的第二个参数是"),s("code",[t._v("index")]),t._v("，是原数组中正在处理的当前元素的索引")])]),t._v(" "),s("h3",{attrs:{id:"parseint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint"}},[t._v("#")]),t._v(" parseInt")]),t._v(" "),s("p",[s("code",[t._v("parseInt")]),t._v("方法解析一个字符串参数，并返回一个指定基数（进制）的整数")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("parseInt")]),t._v("的第一个参数是"),s("code",[t._v("string")]),t._v("，也就是要被解析的字符串的值")]),t._v(" "),s("li",[s("code",[t._v("parseInt")]),t._v("得第二个参数是"),s("code",[t._v("radix")]),t._v("，一个介于2和36之间的整数，默认为10，代表解析字符串的基数（进制数）")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("等同于")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("即返回值分别为")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//radix为0时，且string参数不以“0x”和“0”开头时，按照10为基数处理。这个时候返回1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基数为1（1进制）表示的数中，最大值小于2，所以无法解析，返回NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//基数为2（2进制）表示的数中，最大值小于3，所以无法解析，返回NaN")]),t._v("\n")])])]),s("p",[t._v("所以")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1, NaN, NaN")]),t._v("\n")])])]),s("h2",{attrs:{id:"q4："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q4："}},[t._v("#")]),t._v(" Q4：[] == ![]")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("h3",{attrs:{id:"解析：-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解析：-2"}},[t._v("#")]),t._v(" 解析：")]),t._v(" "),s("p",[s("code",[t._v("==")]),t._v(" 运算符，"),s("code",[t._v("javascript")]),t._v("语言灵活性的代表但也是最臭名昭著的黑魔法之一，比较运算之中发生的隐式类型转化不知坑了多少JSer。")]),t._v(" "),s("p",[t._v("我们先来列举一下"),s("code",[t._v("==")]),t._v("（相等运算符）的运算规则")]),t._v(" "),s("ul",[s("li",[t._v("如果两个值类型相同，进行 "),s("code",[t._v("====")]),t._v(" （严格相等运算符） 比较")]),t._v(" "),s("li",[t._v("如果两个值类型不同，它们可能是相等的，此时根据下列规则进行类型转换后比较:\n"),s("ol",[s("li",[t._v("如果一个值为"),s("code",[t._v("null")]),t._v("，另一个是"),s("code",[t._v("undefined")]),t._v("，那么"),s("strong",[t._v("相等")])]),t._v(" "),s("li",[t._v("如果一个值是"),s("code",[t._v("String")]),t._v("，另一个是"),s("code",[t._v("Number")]),t._v("，在比较之前要先将"),s("code",[t._v("String")]),t._v("转换为"),s("code",[t._v("Number")]),t._v("，即调用"),s("code",[t._v("Number()")]),t._v("方法")]),t._v(" "),s("li",[t._v("如果一个值是"),s("code",[t._v("Boolean")]),t._v("，则先将这个"),s("code",[t._v("Boolean")]),t._v("转换为数值后再进行比较，即调用"),s("code",[t._v("Number()")]),t._v("方法")]),t._v(" "),s("li",[t._v("如果一个值是"),s("code",[t._v("Object")]),t._v("，另一个是"),s("code",[t._v("String")]),t._v("或"),s("code",[t._v("Number")]),t._v("，则先将对象转换为基本数据类型再比较，即调用"),s("code",[t._v("javascript")]),t._v("内置类的"),s("code",[t._v("valueOf")]),t._v("或"),s("code",[t._v("toString")]),t._v("方法，"),s("code",[t._v("valueOf")]),t._v("会先于"),s("code",[t._v("toString")]),t._v("，例外的是"),s("code",[t._v("Date")]),t._v("对象，会直接用"),s("code",[t._v("toString")]),t._v("转换")])])])]),t._v(" "),s("p",[t._v("接下来我们分析一下"),s("code",[t._v("[] == ![]")]),t._v("为什么返回"),s("code",[t._v("true")])]),t._v(" "),s("ol",[s("li",[t._v("首先运算符右边的"),s("code",[t._v("![]")]),t._v("会先进行运算，得到"),s("code",[t._v("false")]),t._v("，即"),s("code",[t._v("[] == false")])]),t._v(" "),s("li",[t._v("当等式两边有"),s("code",[t._v("Boolean")]),t._v("值得时候会先对其进行类型转换，即"),s("code",[t._v("Number(false) = 0")]),t._v("，等式两边变为"),s("code",[t._v("[] == 0")])]),t._v(" "),s("li",[t._v("当等式两边一个值为"),s("code",[t._v("Object")]),t._v("另一个为"),s("code",[t._v("Number")]),t._v("时，将"),s("code",[t._v("Object")]),t._v("进行类型转换，即"),s("code",[t._v("[].valueOf()")]),t._v("，发现返回的结果"),s("code",[t._v("[]")]),t._v("仍是"),s("code",[t._v("Object")]),t._v("，所以再调用"),s("code",[t._v("[].toString()")]),t._v("得到"),s("code",[t._v("''")]),t._v("，"),s("code",[t._v("Number('')")]),t._v("得到"),s("code",[t._v("0")])]),t._v(" "),s("li",[s("code",[t._v("0 == 0")]),t._v(" 成立， 返回"),s("code",[t._v("true")])])]),t._v(" "),s("h2",{attrs:{id:"q5-react中setstate在什么情况下是同步的？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q5-react中setstate在什么情况下是同步的？"}},[t._v("#")]),t._v(" Q5: React中setState在什么情况下是同步的？")]),t._v(" "),s("p",[t._v("在 React 中，如果是在 React 引发的事件处理方法（比如通过 onClick 引发的事件处理）或在生命周期中调用 setState 不会同步更新 this.state 。除此之外的 setState 调用会同步执行this.state。所谓"),s("strong",[t._v("除此之外")]),t._v("，指的是绕过 React 通过 addEventListener 直接添加的事件处理函数，还有通过 setTimeout/setInterval 产生的异步调用。")]),t._v(" "),s("blockquote",[s("p",[t._v("出于性能考虑，React 可能会把多个 setState() 调用合并成一个调用。  —— "),s("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/state-and-lifecycle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)])]),t._v(" "),s("blockquote",[s("p",[t._v("setState 的"),s("strong",[t._v("异步")]),t._v("并不是说内部由异步代码实现，其实本身执行的过程和代码都是同步的，只是合成事件和钩子函数的调用顺序在更新之前，导致在合成事件和钩子函数中没法立马拿到更新后的值，形式了所谓的“异步”，当然可以通过第二个参数 setState(partialState, callback) 中的callback拿到更新后的结果。")])]),t._v(" "),s("blockquote",[s("p",[t._v("setState 的批量更新优化也是建立在"),s("strong",[t._v("异步")]),t._v("（合成事件、钩子函数）之上的，在原生事件和setTimeout 中不会批量更新，在"),s("strong",[t._v("异步")]),t._v("中如果对同一个值进行多次 setState ， setState 的批量更新策略会对其进行覆盖，取最后一次的执行，如果是同时 setState 多个不同的值，在更新时会对其进行合并批量更新。")])]),t._v(" "),s("p",[t._v("关于setState的具体内容详见大佬的文章"),s("a",{attrs:{href:"https://juejin.im/post/5b45c57c51882519790c7441",target:"_blank",rel:"noopener noreferrer"}},[t._v("《你真的理解setState吗？》"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"q6-http2-0了解吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q6-http2-0了解吗？"}},[t._v("#")]),t._v(" Q6: HTTP2.0了解吗？")]),t._v(" "),s("p",[t._v("HTTP2.0新特性如下：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("新的二进制格式")]),t._v("： HTTP1.x的解析是基于文本。基于文本协议的格式解析存在天然缺陷，文本的表现形式有多样性，要做到健壮性考虑的场景必然很多，二进制则不同，只认0和1的组合。基于这种考虑HTTP2.0的协议解析决定采用二进制格式，实现方便且健壮。")]),t._v(" "),s("li",[s("strong",[t._v("多路复用")]),t._v("：即连接共享，HTTP2.0多个请求可同时在一个连接上并行执行。某个请求任务耗时严重，不会影响到其它连接的正常执行，HTTP1.x则可能会因为一个请求超时而发生线头阻塞。")]),t._v(" "),s("li",[s("strong",[t._v("header压缩")]),t._v("：HTTP1.x的header带有大量信息，而且每次都要重复发送，HTTP2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。")]),t._v(" "),s("li",[s("strong",[t._v("服务端推送")]),t._v("：服务端推送能把客户端所需要许多资源随着单次请求一起发送到客户端，省去了客户端重复请求的步骤")])]),t._v(" "),s("h2",{attrs:{id:"q7-tcp连接的三次握手和四次挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q7-tcp连接的三次握手和四次挥手"}},[t._v("#")]),t._v(" Q7: TCP连接的三次握手和四次挥手")]),t._v(" "),s("h3",{attrs:{id:"三次握手："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三次握手："}},[t._v("#")]),t._v(" 三次握手：")]),t._v(" "),s("p",[t._v("客户端：我想和你建立连接")]),t._v(" "),s("p",[t._v("服务端：ok，我现在可以和你建立连接")]),t._v(" "),s("p",[t._v("客户端：好的，那我们现在开始连接吧")]),t._v(" "),s("h3",{attrs:{id:"四次挥手："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手："}},[t._v("#")]),t._v(" 四次挥手：")]),t._v(" "),s("p",[t._v("客户端：我准备断开连接了")]),t._v(" "),s("p",[t._v("服务端：ok，但是我这边可能还有一些数据要传，等我传我我会通知你")]),t._v(" "),s("p",[t._v("服务端：我传完了，可以断开连接了")]),t._v(" "),s("p",[t._v("客户端：ok，你断开连接吧")]),t._v(" "),s("p",[t._v("（服务端：收到客户端最后一次信息后断开连接，未收到就会要求客户端重新发送关闭信息）")]),t._v(" "),s("p",[t._v("（客户端：发送最后一次信息后等待2MLS(2倍报文最大生存时间)，没有收到服务端的重传请求就关闭自己的连接）")]),t._v(" "),s("h3",{attrs:{id:"三次握手具体操作："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三次握手具体操作："}},[t._v("#")]),t._v(" 三次握手具体操作：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一次握手：客户端发送一个TCP标志位SYN=1，ACK=0的数据包给服务端，并随机会产生一个Sequence number=3233.当服务端接收到这个数据后，服务端由SYN=1可知客户端是想要建立连接；")])]),t._v(" "),s("li",[s("p",[t._v("第二次握手：服务端要对客户端的联机请求进行确认，向客户端发送应答号ACK=1、SYN=1\n确认号Acknowledge number=3234，此值是客户端的序列号加1，还会产生一个随机的序列号Sequence number=36457，这样就告诉客户端可以进行连接；")])]),t._v(" "),s("li",[s("p",[t._v("第三次握手：客户端收到数据后检查Acknowledge number是否是3233+1的值，以及ACK的值是否为1，若为1，host1会发送ACK=1、确认号码Acknowledge number=36457，告诉服务端,你的请求连接被确认，连接可以建立。")])])]),t._v(" "),s("h3",{attrs:{id:"四次挥手具体操作："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手具体操作："}},[t._v("#")]),t._v(" 四次挥手具体操作：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一次挥手：当传输的数据到达尾部时，客户端向服务端发送FIN=1标志位；可理解成，客户端向服务端说，我这边的数据传送完成了，我准备断开了连接；")])]),t._v(" "),s("li",[s("p",[t._v("第二次挥手：因TCP的连接是全双工的双向连接，关闭也是要从两边关闭；当服务端收到客户端发来的FIN=1的标志位后，服务端不会立刻向客户端发送FIND=1的请求关闭信息，\n而是先向客户端发送一个ACK=1的应答信息，表示：你请求关闭的请求我已经收到，但我可能还有数据没有完成传送，你再等下，等我数据传输完成了我就告诉你；")])]),t._v(" "),s("li",[s("p",[t._v("第三次挥手：服务端数据传输完成，向客户端发送FIN=1，客户端收到请求关闭连接的请求后，客户端就明白服务端的数据已传输完成，现在可以断开连接了，")])]),t._v(" "),s("li",[s("p",[t._v("第四次挥手：客户端收到FIND=1后，客户端还是怕由于网络不稳定的原因，怕服务端不知道他要断开连接，于是向服务端发送ACK=1确认信息进行确认，\n把自己设置成TIME_WAIT状态并启动定时器，如果服务端没有收到ACK，服务端TCP的定时器到达后，会要求客户端重新发送ACK，当服务端收到ACK后，服务端就断开连接；\n当客户端等待2MLS（2倍报文最大生存时间）后，没有收到服务端的重传请求后，他就知道服务端已收到了ACK，所以客户端此时才关闭自己的连接。")])])]),t._v(" "),s("h2",{attrs:{id:"q8-https的握手流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q8-https的握手流程"}},[t._v("#")]),t._v(" Q8: HTTPS的握手流程")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("浏览器给出协议版本号、一个客户端生成的随机数（Client random），以及客户端支持的加密方法。")])]),t._v(" "),s("li",[s("p",[t._v("web服务器确认双方使用的加密方法，并给出数字证书、以及一个服务器生成的随机数（Server random）。")])]),t._v(" "),s("li",[s("p",[t._v("浏览器确认数字证书有效，然后生成一个新的随机数（Premaster secret），并使用数字证书中的公钥，加密这个随机数，发给web服务器。")])]),t._v(" "),s("li",[s("p",[t._v("web服务器使用自己的私钥，获取浏览器发来的随机数（即Premaster secret）。")])]),t._v(" "),s("li",[s("p",[t._v('浏览器和web服务器根据约定的加密方法，使用前面的三个随机数，生成"对话密钥"（session key），用来加密接下来的整个对话过程。')])])]),t._v(" "),s("h2",{attrs:{id:"q9-function-prototype-function-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q9-function-prototype-function-prototype"}},[t._v("#")]),t._v(" Q9: Function[[prototype]] === Function.prototype?")]),t._v(" "),s("p",[t._v("是对的  因为 Function 也是一个函数，它的__proto__指向 Function 构造函数的原型，很扯")]),t._v(" "),s("p",[t._v("应该是现有 Function.prototype 然后有的 function Function()")]),t._v(" "),s("h2",{attrs:{id:"q10-为什么react的事件handler需要手动绑定this"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#q10-为什么react的事件handler需要手动绑定this"}},[t._v("#")]),t._v(" Q10: 为什么React的事件handler需要手动绑定this?")]),t._v(" "),s("p",[t._v("相对于其他框架来说，react使用了合成事件（SyntheticEvent）来标准化浏览器的事件。")]),t._v(" "),s("p",[t._v("合成事件是一种顶层代理机制，这种代理机制作用的结果是：")]),t._v(" "),s("blockquote",[s("p",[t._v("事件依然在真实的dom节点上触发，之后会冒泡一路到document的节点，然后开始分发document节点收集到的事件，这个时候react从事件触发的组件实例开始， 遍历虚拟dom树，从树上取下我们绑定的事件，收集起来，然后执行。")])]),t._v(" "),s("p",[t._v("举个例子：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fatherHandler")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("father")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*...*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("childHander")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("child")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*...*/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fatherHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span onClick"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childHander"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("当事件触发以后react会把上面的事件处理函数放到一个数组里是这样的")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("最后，react只要遍历执行这个数组，就能执行所有需要执行的事件处理函数。哈哈，想必眼尖的同学已经看出问题了，之前我们对函数进行了临时保存(简单粗暴的把事件处理函数赋值给了onClick属性)，这个时候执行的话，this自然就丢失了。有的同学也说了这其实不是react的锅，是js本身的问题。但是如果react保存顺便保存一下实例，还是可以做到，不需要你绑定this的，但是这样对于react来说代价太大了。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" father"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("instance，child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);